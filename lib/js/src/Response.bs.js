// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Util$Guabao = require("./Util/Util.bs.js");
var SrcLoc$Guabao = require("./SrcLoc.bs.js");
var Element$Guabao = require("./View/Element.bs.js");

function destroy(self) {
  return Belt_Array.forEach(self.decorations, (function (prim) {
                prim.dispose();
                
              }));
}

function decode(param) {
  return Json_decode.map((function (param) {
                return {
                        id: param[0],
                        pre: param[1],
                        post: param[2],
                        range: param[3],
                        decorations: []
                      };
              }), (function (param) {
                return Json_decode.tuple4(Json_decode.$$int, Json_decode.string, Json_decode.string, SrcLoc$Guabao.$$Range.decode, param);
              }), param);
}

var Specification = {
  destroy: destroy,
  decode: decode
};

var decode$1 = Util$Guabao.Decode.sum(function (x) {
      switch (x) {
        case "ResConsoleLog" :
            return {
                    TAG: /* Contents */0,
                    _0: (function (param) {
                        return Json_decode.map((function (i) {
                                      return {
                                              TAG: /* ConsoleLog */2,
                                              _0: i
                                            };
                                    }), Json_decode.string, param);
                      })
                  };
        case "ResDisplay" :
            return {
                    TAG: /* Contents */0,
                    _0: (function (param) {
                        return Json_decode.map((function (param) {
                                      return {
                                              TAG: /* Display */0,
                                              _0: param[0],
                                              _1: param[1]
                                            };
                                    }), (function (param) {
                                      return Json_decode.tuple2(Json_decode.$$int, (function (param) {
                                                    return Json_decode.array(Element$Guabao.Block.decode, param);
                                                  }), param);
                                    }), param);
                      })
                  };
        case "ResUpdateSpecs" :
            return {
                    TAG: /* Contents */0,
                    _0: (function (param) {
                        return Json_decode.map((function (specs) {
                                      return {
                                              TAG: /* UpdateSpecs */1,
                                              _0: specs
                                            };
                                    }), (function (param) {
                                      return Json_decode.array(decode, param);
                                    }), param);
                      })
                  };
        default:
          throw {
                RE_EXN_ID: Json_decode.DecodeError,
                _1: "Unknown constructor: " + x,
                Error: new Error()
              };
      }
    });

var Kind = {
  decode: decode$1
};

var decode$2 = Util$Guabao.Decode.sum(function (x) {
      switch (x) {
        case "CannotDecodeRequest" :
            return {
                    TAG: /* Contents */0,
                    _0: (function (param) {
                        return Json_decode.map((function (msg) {
                                      return {
                                              TAG: /* CannotDecodeRequest */2,
                                              _0: msg
                                            };
                                    }), Json_decode.string, param);
                      })
                  };
        case "Res" :
            return {
                    TAG: /* Contents */0,
                    _0: (function (param) {
                        return Json_decode.map((function (param) {
                                      return {
                                              TAG: /* Res */0,
                                              _0: param[0],
                                              _1: param[1]
                                            };
                                    }), (function (param) {
                                      return Json_decode.pair(Json_decode.string, (function (param) {
                                                    return Json_decode.array(decode$1, param);
                                                  }), param);
                                    }), param);
                      })
                  };
        default:
          throw {
                RE_EXN_ID: Json_decode.DecodeError,
                _1: "Unknown constructor: " + x,
                Error: new Error()
              };
      }
    });

exports.Specification = Specification;
exports.Kind = Kind;
exports.decode = decode$2;
/* decode Not a pure module */
