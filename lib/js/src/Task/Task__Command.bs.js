// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Task$Guacamole = require("./Task.bs.js");
var State$Guacamole = require("../State.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function Impl(Editor) {
  var Task__Types = Task$Guacamole.Impl(Editor);
  var State = State$Guacamole.Impl(Editor);
  var dispatch = function (param) {
    switch (param) {
      case /* Load */0 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* Connect */0,
                    /* [] */0
                  ]);
      case /* Quit */1 :
          return /* [] */0;
      case /* Reload */2 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* WithState */Caml_chrome_debugger.variant("WithState", 0, [(function (state) {
                            var editor = Curry._1(Task__Types.State.getEditor, state);
                            return Belt_Option.mapWithDefault(Curry._1(Editor.getFileName, editor), $$Promise.resolved(/* [] */0), (function (fileName) {
                                          return $$Promise.map(Curry._1(Editor.save, editor), (function (saveSucceed) {
                                                        if (!(saveSucceed && fileName !== "")) {
                                                          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                                    /* Display */Caml_chrome_debugger.variant("Display", 3, [
                                                                        /* Error */Caml_chrome_debugger.variant("Error", 1, ["Cannot read filepath"]),
                                                                        /* Plain */Caml_chrome_debugger.variant("Plain", 1, ["Please save the file first"])
                                                                      ]),
                                                                    /* [] */0
                                                                  ]);
                                                        }
                                                        var match = state.mode;
                                                        if (match) {
                                                          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                                    /* RemoveDecorations */1,
                                                                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                                        /* SendRequest */Caml_chrome_debugger.variant("SendRequest", 2, [/* Load */Caml_chrome_debugger.variant("Load", 0, [
                                                                                fileName,
                                                                                /* WP2 */1
                                                                              ])]),
                                                                        /* [] */0
                                                                      ])
                                                                  ]);
                                                        } else {
                                                          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                                    /* RemoveDecorations */1,
                                                                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                                        /* SendRequest */Caml_chrome_debugger.variant("SendRequest", 2, [/* Load */Caml_chrome_debugger.variant("Load", 0, [
                                                                                fileName,
                                                                                /* WP1 */0
                                                                              ])]),
                                                                        /* [] */0
                                                                      ])
                                                                  ]);
                                                        }
                                                      }));
                                        }));
                          })]),
                    /* [] */0
                  ]);
      case /* Refine */3 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* DispatchCommand */Caml_chrome_debugger.variant("DispatchCommand", 1, [/* Reload */2]),
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        /* WithState */Caml_chrome_debugger.variant("WithState", 0, [(function (state) {
                                return Belt_Option.mapWithDefault(Curry._1(Task__Types.State.Spec.fromCursorPosition, state), $$Promise.resolved(/* [] */0), (function (spec) {
                                              var payload = Curry._2(Task__Types.State.Spec.getPayload, state.editor, spec);
                                              return $$Promise.resolved(/* :: */Caml_chrome_debugger.simpleVariant("::", [
                                                            /* SendRequest */Caml_chrome_debugger.variant("SendRequest", 2, [/* Refine */Caml_chrome_debugger.variant("Refine", 1, [
                                                                    spec.id,
                                                                    payload
                                                                  ])]),
                                                            /* [] */0
                                                          ]));
                                            }));
                              })]),
                        /* [] */0
                      ])
                  ]);
      case /* InsertAssertion */4 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* DispatchCommand */Caml_chrome_debugger.variant("DispatchCommand", 1, [/* Reload */2]),
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        /* WithState */Caml_chrome_debugger.variant("WithState", 0, [(function (state) {
                                var cursor = Curry._1(Editor.getCursorPosition, state.editor);
                                var match = Curry._2(Editor.Point.toPos, cursor, "whatever");
                                return $$Promise.resolved(/* :: */Caml_chrome_debugger.simpleVariant("::", [
                                              /* SendRequest */Caml_chrome_debugger.variant("SendRequest", 2, [/* InsertAssertion */Caml_chrome_debugger.variant("InsertAssertion", 2, [match[1]])]),
                                              /* [] */0
                                            ]));
                              })]),
                        /* [] */0
                      ])
                  ]);
      case /* Debug */5 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* SendRequest */Caml_chrome_debugger.variant("SendRequest", 2, [/* Debug */0]),
                    /* [] */0
                  ]);
      
    }
  };
  return {
          Task__Types: Task__Types,
          State: State,
          dispatch: dispatch
        };
}

exports.Impl = Impl;
/* Promise Not a pure module */
