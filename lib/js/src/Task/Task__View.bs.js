// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Js_dict = require("bs-platform/lib/js/js_dict.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var GCL$Guacamole = require("../GCL.bs.js");
var State$Guacamole = require("../State.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Editor$AgdaModeVscode = require("agda-mode-vscode/lib/js/src/Editor.bs.js");

var decorationDict = { };

var delete_ = (function (id) {delete decorationDict[id]});

function clearDict(param) {
  return Belt_Array.forEach(Js_dict.entries(decorationDict), (function (param) {
                delete_(param[0]);
                return Belt_Array.forEach(param[1], Editor$AgdaModeVscode.Decoration.destroy);
              }));
}

function handle(editor, response) {
  if (typeof response === "number") {
    if (response === /* Initialized */0) {
      return /* [] */0;
    } else {
      return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                /* WithState */Caml_chrome_debugger.variant("WithState", 0, [(function (state) {
                        State$Guacamole.destroy(state);
                        return $$Promise.resolved(/* [] */0);
                      })]),
                /* [] */0
              ]);
    }
  }
  switch (response.tag | 0) {
    case /* SetMode */0 :
        var mode = response[0];
        return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                  /* WithState */Caml_chrome_debugger.variant("WithState", 0, [(function (state) {
                          state.mode = mode;
                          return $$Promise.resolved(/* [] */0);
                        })]),
                  /* [] */0
                ]);
    case /* Link */1 :
        var loc = response[0];
        switch (loc.tag | 0) {
          case /* MouseOver */0 :
              var loc$1 = loc[0];
              var key = GCL$Guacamole.Loc.toString(loc$1);
              var range = GCL$Guacamole.Loc.toRange(loc$1);
              var decoration = Editor$AgdaModeVscode.Decoration.highlightBackground(editor, "editor.symbolHighlightBackground", [range]);
              decorationDict[key] = [decoration];
              return /* [] */0;
          case /* MouseOut */1 :
              var key$1 = GCL$Guacamole.Loc.toString(loc[0]);
              Belt_Option.forEach(Js_dict.get(decorationDict, key$1), (function (decos) {
                      return Belt_Array.forEach(decos, Editor$AgdaModeVscode.Decoration.destroy);
                    }));
              delete_(key$1);
              return /* [] */0;
          case /* MouseClick */2 :
              var range$1 = GCL$Guacamole.Loc.toRange(loc[0]);
              Editor$AgdaModeVscode.$$Selection.set(editor, range$1);
              return /* [] */0;
          
        }
    case /* Substitute */2 :
        clearDict(undefined);
        return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                  /* SendRequest */Caml_chrome_debugger.variant("SendRequest", 2, [/* Substitute */Caml_chrome_debugger.variant("Substitute", 3, [
                          response[0],
                          response[1],
                          response[2]
                        ])]),
                  /* [] */0
                ]);
    
  }
}

exports.decorationDict = decorationDict;
exports.delete_ = delete_;
exports.clearDict = clearDict;
exports.handle = handle;
/* Promise Not a pure module */
