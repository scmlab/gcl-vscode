// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Js_list = require("bs-platform/lib/js/js_list.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Impl__State$Guacamole = require("../Implementation/Impl__State.bs.js");
var Task__Error$Guacamole = require("./Task__Error.bs.js");
var Task__Types$Guacamole = require("./Task__Types.bs.js");

function Impl(Editor) {
  var State = Impl__State$Guacamole.Impl(Editor);
  var Task__Types = Task__Types$Guacamole.Impl(Editor);
  var Task__Error = Task__Error$Guacamole.Impl(Editor);
  var handle = function (response) {
    switch (response.tag | 0) {
      case /* Error */0 :
          return Js_list.flatten(Belt_List.fromArray(Belt_Array.map(response[0], Task__Error.handle)));
      case /* OK */1 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* SetSpecifications */Caml_chrome_debugger.variant("SetSpecifications", 1, [response[1]]),
                    /* :: */Caml_chrome_debugger.simpleVariant("::", [
                        /* Display */Caml_chrome_debugger.variant("Display", 6, [
                            /* Plain */Caml_chrome_debugger.variant("Plain", 0, ["Proof Obligations"]),
                            /* ProofObligations */Caml_chrome_debugger.variant("ProofObligations", 0, [response[0]])
                          ]),
                        /* [] */0
                      ])
                  ]);
      case /* Resolve */2 :
      case /* InsertAssertion */3 :
          return /* [] */0;
      case /* UnknownResponse */4 :
          return /* :: */Caml_chrome_debugger.simpleVariant("::", [
                    /* Display */Caml_chrome_debugger.variant("Display", 6, [
                        /* Error */Caml_chrome_debugger.variant("Error", 1, ["Panic: unknown response from GCL"]),
                        /* Plain */Caml_chrome_debugger.variant("Plain", 1, [JSON.stringify(response[0])])
                      ]),
                    /* [] */0
                  ]);
      
    }
  };
  return {
          State: State,
          Task__Types: Task__Types,
          Task__Error: Task__Error,
          handle: handle
        };
}

exports.Impl = Impl;
/* Impl__State-Guacamole Not a pure module */
