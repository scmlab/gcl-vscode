// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var P$Guacamole = require("../Util/P.bs.js");
var Task__Types$Guacamole = require("./Task__Types.bs.js");
var Task__Command$Guacamole = require("./Task__Command.bs.js");

function Impl(Editor, State) {
  var partial_arg = Task__Command$Guacamole.Impl;
  var TaskCommand = (function (param) {
        return partial_arg(Editor, param);
      })(State);
  var partial_arg$1 = Task__Types$Guacamole.Impl;
  var Task = (function (param) {
        return partial_arg$1(Editor, param);
      })(State);
  var State$1 = Curry._1(State, Editor);
  var run = function (state, tasks) {
    var runTask = function (task) {
      if (task.tag) {
        var command = task[0];
        console.log("[ dispatch command ]", command);
        return run(state, Curry._1(TaskCommand.dispatch, command));
      } else {
        return $$Promise.flatMap(Curry._1(task[0], state), (function (param) {
                      return run(state, param);
                    }));
      }
    };
    var runEach = function (param) {
      if (param) {
        var xs = param[1];
        return P$Guacamole.let_(runTask(param[0]), (function (param) {
                      return P$Guacamole.let_(runEach(xs), (function (param) {
                                    return $$Promise.resolved(/* () */0);
                                  }));
                    }));
      } else {
        return $$Promise.resolved(/* () */0);
      }
    };
    return runEach(tasks);
  };
  return {
          TaskCommand: TaskCommand,
          Task: Task,
          State: State$1,
          run: run
        };
}

exports.Impl = Impl;
/* Promise Not a pure module */
