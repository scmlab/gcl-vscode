// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/lib/js/src/Json_encode.bs.js");
var Link$Guabao = require("../Link.bs.js");
var Util$Guabao = require("../../Util/Util.bs.js");
var SrcLoc$Guabao = require("../../SrcLoc.bs.js");
var TraceView$Guabao = require("./TraceView.bs.js");
var Element__Inlines$Guabao = require("./Element__Inlines.bs.js");

function Element__Block$Code(Props) {
  var value = Props.value;
  var match = React.useState(function () {
        return [];
      });
  var setTrace = match[1];
  var match$1 = React.useState(function () {
        return true;
      });
  var setHidden = match$1[1];
  var stepBack = function (param) {
    return Curry._1(setTrace, (function (trace) {
                  var popped = trace.slice(0, trace.length - 1 | 0);
                  Belt_Option.forEach(Caml_option.undefined_to_opt(trace.pop()), (function (step) {
                          return Curry._1(step.undo, undefined);
                        }));
                  return popped;
                }));
  };
  var toggleView = function (param) {
    return Curry._1(setHidden, (function (prim) {
                  return !prim;
                }));
  };
  var onSubst = function (step) {
    return Curry._1(setTrace, (function (trace) {
                  return trace.concat([step]);
                }));
  };
  return React.createElement(React.Fragment, undefined, React.createElement("pre", undefined, React.createElement("div", {
                      className: "element-block-code-buttons"
                    }, React.createElement("button", {
                          className: "codicon codicon-debug-step-back",
                          onClick: stepBack
                        }), React.createElement("button", {
                          className: "codicon codicon-debug-rerun",
                          onClick: toggleView
                        })), React.createElement(Element__Inlines$Guabao.make, {
                      value: value,
                      onSubst: onSubst
                    })), React.createElement(TraceView$Guabao.make, {
                  hidden: match$1[0],
                  trace: match[0]
                }));
}

var Code = {
  make: Element__Block$Code
};

function decode(json) {
  return Util$Guabao.Decode.sum(function (x) {
                switch (x) {
                  case "Code" :
                      return {
                              TAG: /* Contents */0,
                              _0: (function (param) {
                                  return Json_decode.map((function (a) {
                                                return {
                                                        TAG: /* Code */3,
                                                        _0: a
                                                      };
                                              }), Element__Inlines$Guabao.decode, param);
                                })
                            };
                  case "Header" :
                      return {
                              TAG: /* Contents */0,
                              _0: (function (param) {
                                  return Json_decode.map((function (param) {
                                                return {
                                                        TAG: /* Header */0,
                                                        _0: param[0],
                                                        _1: param[1]
                                                      };
                                              }), (function (param) {
                                                return Json_decode.tuple2(Json_decode.string, (function (param) {
                                                              return Json_decode.optional(SrcLoc$Guabao.$$Range.decode, param);
                                                            }), param);
                                              }), param);
                                })
                            };
                  case "HeaderWithAnchor" :
                      return {
                              TAG: /* Contents */0,
                              _0: (function (param) {
                                  return Json_decode.map((function (param) {
                                                return {
                                                        TAG: /* HeaderWithAnchor */1,
                                                        _0: param[0],
                                                        _1: param[1],
                                                        _2: param[2],
                                                        _3: param[3]
                                                      };
                                              }), (function (param) {
                                                return Json_decode.tuple4(Json_decode.string, Json_decode.string, (function (param) {
                                                              return Json_decode.optional(SrcLoc$Guabao.$$Range.decode, param);
                                                            }), (function (param) {
                                                              return Json_decode.optional(SrcLoc$Guabao.$$Range.decode, param);
                                                            }), param);
                                              }), param);
                                })
                            };
                  case "Paragraph" :
                      return {
                              TAG: /* Contents */0,
                              _0: (function (param) {
                                  return Json_decode.map((function (a) {
                                                return {
                                                        TAG: /* Paragraph */2,
                                                        _0: a
                                                      };
                                              }), Element__Inlines$Guabao.decode, param);
                                })
                            };
                  default:
                    throw {
                          RE_EXN_ID: Json_decode.DecodeError,
                          _1: "[Element.Block] Unknown constructor: " + x,
                          Error: new Error()
                        };
                }
              })(json);
}

function encode(x) {
  switch (x.TAG | 0) {
    case /* Header */0 :
        return Json_encode.object_({
                    hd: [
                      "tag",
                      "Header"
                    ],
                    tl: {
                      hd: [
                        "contents",
                        Json_encode.tuple2((function (prim) {
                                return prim;
                              }), (function (param) {
                                return Json_encode.nullable(SrcLoc$Guabao.$$Range.encode, param);
                              }), [
                              x._0,
                              x._1
                            ])
                      ],
                      tl: /* [] */0
                    }
                  });
    case /* HeaderWithAnchor */1 :
        return Json_encode.object_({
                    hd: [
                      "tag",
                      "HeaderWithAnchor"
                    ],
                    tl: {
                      hd: [
                        "contents",
                        Json_encode.tuple4((function (prim) {
                                return prim;
                              }), (function (prim) {
                                return prim;
                              }), (function (param) {
                                return Json_encode.nullable(SrcLoc$Guabao.$$Range.encode, param);
                              }), (function (param) {
                                return Json_encode.nullable(SrcLoc$Guabao.$$Range.encode, param);
                              }), [
                              x._0,
                              x._1,
                              x._2,
                              x._3
                            ])
                      ],
                      tl: /* [] */0
                    }
                  });
    case /* Paragraph */2 :
        return Json_encode.object_({
                    hd: [
                      "tag",
                      "Paragraph"
                    ],
                    tl: {
                      hd: [
                        "contents",
                        Element__Inlines$Guabao.encode(x._0)
                      ],
                      tl: /* [] */0
                    }
                  });
    case /* Code */3 :
        return Json_encode.object_({
                    hd: [
                      "tag",
                      "Code"
                    ],
                    tl: {
                      hd: [
                        "contents",
                        Element__Inlines$Guabao.encode(x._0)
                      ],
                      tl: /* [] */0
                    }
                  });
    
  }
}

function Element__Block(Props) {
  var value = Props.value;
  var onInsertAnchor = Props.onInsertAnchor;
  switch (value.TAG | 0) {
    case /* Header */0 :
        var range = value._1;
        var header = value._0;
        if (range !== undefined) {
          return React.createElement(Link$Guabao.make, {
                      range: range,
                      children: React.createElement("header", undefined, header, React.createElement("span", {
                                className: "element-block-header-range"
                              }, "at " + SrcLoc$Guabao.$$Range.toString(range)))
                    });
        } else {
          return React.createElement("header", undefined, header);
        }
    case /* HeaderWithAnchor */1 :
        var range$1 = value._3;
        var anchor = value._2;
        var hash = value._1;
        var range$2 = range$1 !== undefined ? React.createElement(Link$Guabao.make, {
                range: range$1,
                children: React.createElement("span", {
                      className: "element-block-header-range"
                    }, "at " + SrcLoc$Guabao.$$Range.toString(range$1)),
                title: "location of proof obligation"
              }) : React.createElement(React.Fragment, undefined);
        var croppedHash = "#" + hash.slice(0, 7);
        var anchor$1 = anchor !== undefined ? React.createElement(Link$Guabao.make, {
                range: anchor,
                children: React.createElement("span", {
                      className: "element-block-anchor-range linked"
                    }, croppedHash),
                title: "location of the corresponding proof"
              }) : React.createElement("span", {
                className: "element-block-anchor-range",
                title: "click to create a corresponding proof",
                onClick: (function (param) {
                    return Curry._1(onInsertAnchor, hash);
                  })
              }, croppedHash);
        return React.createElement("header", undefined, value._0, anchor$1, range$2);
    case /* Paragraph */2 :
        return React.createElement("p", undefined, React.createElement(Element__Inlines$Guabao.make, {
                        value: value._0
                      }));
    case /* Code */3 :
        return React.createElement(Element__Block$Code, {
                    value: value._0
                  });
    
  }
}

var Inlines;

var make = Element__Block;

exports.Inlines = Inlines;
exports.Code = Code;
exports.decode = decode;
exports.encode = encode;
exports.make = make;
/* react Not a pure module */
