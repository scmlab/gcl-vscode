// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Chan$Guabao = require("../Util/Chan.bs.js");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/lib/js/src/Json_encode.bs.js");
var Util$Guabao = require("../Util/Util.bs.js");
var SrcLoc$Guabao = require("../SrcLoc.bs.js");

var decode = Util$Guabao.Decode.sum(function (x) {
      switch (x) {
        case "MouseClick" :
            return {
                    TAG: 0,
                    _0: (function (range) {
                        return {
                                TAG: 2,
                                _0: SrcLoc$Guabao.$$Range.decode(range),
                                [Symbol.for("name")]: "MouseClick"
                              };
                      }),
                    [Symbol.for("name")]: "Contents"
                  };
        case "MouseOut" :
            return {
                    TAG: 0,
                    _0: (function (range) {
                        return {
                                TAG: 1,
                                _0: SrcLoc$Guabao.$$Range.decode(range),
                                [Symbol.for("name")]: "MouseOut"
                              };
                      }),
                    [Symbol.for("name")]: "Contents"
                  };
        case "MouseOver" :
            return {
                    TAG: 0,
                    _0: (function (range) {
                        return {
                                TAG: 0,
                                _0: SrcLoc$Guabao.$$Range.decode(range),
                                [Symbol.for("name")]: "MouseOver"
                              };
                      }),
                    [Symbol.for("name")]: "Contents"
                  };
        default:
          throw {
                RE_EXN_ID: Json_decode.DecodeError,
                _1: "[Link.Event] Unknown constructor: " + x,
                Error: new Error()
              };
      }
    });

function encode(x) {
  switch (x.TAG | 0) {
    case /* MouseOver */0 :
        return Json_encode.object_({
                    hd: [
                      "tag",
                      "MouseOver"
                    ],
                    tl: {
                      hd: [
                        "contents",
                        SrcLoc$Guabao.$$Range.encode(x._0)
                      ],
                      tl: /* [] */0
                    }
                  });
    case /* MouseOut */1 :
        return Json_encode.object_({
                    hd: [
                      "tag",
                      "MouseOut"
                    ],
                    tl: {
                      hd: [
                        "contents",
                        SrcLoc$Guabao.$$Range.encode(x._0)
                      ],
                      tl: /* [] */0
                    }
                  });
    case /* MouseClick */2 :
        return Json_encode.object_({
                    hd: [
                      "tag",
                      "MouseClick"
                    ],
                    tl: {
                      hd: [
                        "contents",
                        SrcLoc$Guabao.$$Range.encode(x._0)
                      ],
                      tl: /* [] */0
                    }
                  });
    
  }
}

var $$Event = {
  decode: decode,
  encode: encode
};

var emitter = Chan$Guabao.make(undefined);

var eventContext = React.createContext(emitter);

function makeProps(value, children, param) {
  return {
          value: value,
          children: children
        };
}

var make = eventContext.Provider;

var Provider = {
  makeProps: makeProps,
  make: make
};

function Link(Props) {
  var range = Props.range;
  var children = Props.children;
  var link = React.useContext(eventContext);
  var onMouseOver = function (param) {
    return Chan$Guabao.emit(link, {
                TAG: 0,
                _0: range,
                [Symbol.for("name")]: "MouseOver"
              });
  };
  var onMouseOut = function (param) {
    return Chan$Guabao.emit(link, {
                TAG: 1,
                _0: range,
                [Symbol.for("name")]: "MouseOut"
              });
  };
  var onClick = function (param) {
    return Chan$Guabao.emit(link, {
                TAG: 2,
                _0: range,
                [Symbol.for("name")]: "MouseClick"
              });
  };
  return React.createElement("span", {
              className: "element-link",
              onClick: onClick,
              onMouseOut: onMouseOut,
              onMouseOver: onMouseOver
            }, children);
}

var make$1 = Link;

exports.$$Event = $$Event;
exports.emitter = emitter;
exports.eventContext = eventContext;
exports.Provider = Provider;
exports.make = make$1;
/* decode Not a pure module */
