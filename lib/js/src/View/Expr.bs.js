// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var GCL$Guacamole = require("../GCL.bs.js");
var Link$Guacamole = require("./Link.bs.js");
var Util$Guacamole = require("../Util/Util.bs.js");
var Subst$Guacamole = require("./Subst.bs.js");
var Common$Guacamole = require("./Common.bs.js");

function Expr$Low(Props) {
  var value = Props.value;
  return React.createElement("div", undefined, Curry._1(GCL$Guacamole.Syntax.Name.toString, value));
}

var Low = {
  make: Expr$Low
};

function Expr$Operator(Props) {
  var value = Props.value;
  var loc = Props.loc;
  return React.createElement(Link$Guacamole.make, {
              loc: loc,
              children: Curry._1(GCL$Guacamole.Syntax.Op.toString, value)
            });
}

var Operator = {
  make: Expr$Operator
};

function handleOperator(n, op, loc) {
  var makeProps = function (prim, prim$1, prim$2, prim$3) {
    var tmp = {
      prec: prim,
      value: prim$1
    };
    if (prim$2 !== undefined) {
      tmp.key = Caml_option.valFromOption(prim$2);
    }
    return tmp;
  };
  var m = Curry._1(GCL$Guacamole.Syntax.Expr.Precedence.classify, op);
  switch (m.TAG | 0) {
    case /* InfixL */0 :
        var m$1 = m._0;
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (q) {
                                    return {
                                            TAG: 1,
                                            _0: React.createElement(Common$Guacamole.Paren.make, {
                                                  activate: n > m$1,
                                                  children: null
                                                }, React.createElement(make, makeProps(m$1, p, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, {}), React.createElement(Expr$Operator, {
                                                      value: op,
                                                      loc: loc
                                                    }), React.createElement(Common$Guacamole.Space.make, {}), React.createElement(make, makeProps(m$1 + 1 | 0, q, undefined, undefined))),
                                            [Symbol.for("name")]: "Complete"
                                          };
                                  }));
                    }));
    case /* InfixR */1 :
        var m$2 = m._0;
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (q) {
                                    return {
                                            TAG: 1,
                                            _0: React.createElement(Common$Guacamole.Paren.make, {
                                                  activate: n > m$2,
                                                  children: null
                                                }, React.createElement(make, makeProps(m$2 + 1 | 0, p, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, {}), React.createElement(Expr$Operator, {
                                                      value: op,
                                                      loc: loc
                                                    }), React.createElement(Common$Guacamole.Space.make, {}), React.createElement(make, makeProps(m$2, q, undefined, undefined))),
                                            [Symbol.for("name")]: "Complete"
                                          };
                                  }));
                    }));
    case /* Infix */2 :
        var m$3 = m._0;
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (q) {
                                    return {
                                            TAG: 1,
                                            _0: React.createElement(Common$Guacamole.Paren.make, {
                                                  activate: n > m$3,
                                                  children: null
                                                }, React.createElement(make, makeProps(m$3 + 1 | 0, p, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, {}), React.createElement(Expr$Operator, {
                                                      value: op,
                                                      loc: loc
                                                    }), React.createElement(Common$Guacamole.Space.make, {}), React.createElement(make, makeProps(m$3 + 1 | 0, q, undefined, undefined))),
                                            [Symbol.for("name")]: "Complete"
                                          };
                                  }));
                    }));
    case /* Prefix */3 :
        var m$4 = m._0;
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return {
                              TAG: 1,
                              _0: React.createElement(Common$Guacamole.Paren.make, {
                                    activate: n > m$4,
                                    children: null
                                  }, React.createElement(Expr$Operator, {
                                        value: op,
                                        loc: loc
                                      }), React.createElement(Common$Guacamole.Space.make, {}), React.createElement(make, makeProps(m$4, p, undefined, undefined))),
                              [Symbol.for("name")]: "Complete"
                            };
                    }));
    case /* Postfix */4 :
        var m$5 = m._0;
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return {
                              TAG: 1,
                              _0: React.createElement(Common$Guacamole.Paren.make, {
                                    activate: n > m$5,
                                    children: null
                                  }, React.createElement(make, makeProps(m$5, p, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, {}), React.createElement(Expr$Operator, {
                                        value: op,
                                        loc: loc
                                      })),
                              [Symbol.for("name")]: "Complete"
                            };
                    }));
    
  }
}

function handleExpr(n, expr) {
  var makeProps = function (prim, prim$1, prim$2, prim$3) {
    var tmp = {
      prec: prim,
      value: prim$1
    };
    if (prim$2 !== undefined) {
      tmp.key = Caml_option.valFromOption(prim$2);
    }
    return tmp;
  };
  switch (expr.TAG | 0) {
    case /* Lit */0 :
        return {
                TAG: 1,
                _0: React.createElement(Link$Guacamole.make, {
                      loc: expr._1,
                      children: Curry._1(GCL$Guacamole.Syntax.Lit.toString, expr._0)
                    }),
                [Symbol.for("name")]: "Complete"
              };
    case /* Var */1 :
        return {
                TAG: 1,
                _0: React.createElement(Link$Guacamole.make, {
                      loc: expr._1,
                      children: Curry._1(GCL$Guacamole.Syntax.Name.toString, expr._0)
                    }),
                [Symbol.for("name")]: "Complete"
              };
    case /* Const */2 :
        return {
                TAG: 1,
                _0: React.createElement(Subst$Guacamole.make, {
                      expr: expr,
                      makePrec: make,
                      makePrecProps: (function (param) {
                          return function (param$1) {
                            var partial_arg = "";
                            return function (param$2) {
                              var tmp = {
                                prec: param,
                                value: param$1
                              };
                              if (partial_arg !== undefined) {
                                tmp.key = Caml_option.valFromOption(partial_arg);
                              }
                              return tmp;
                            };
                          };
                        })
                    }),
                [Symbol.for("name")]: "Complete"
              };
    case /* Op */3 :
        var loc = expr._1;
        var op = expr._0;
        if (n >= 0) {
          return handleOperator(n, op, loc);
        } else {
          return {
                  TAG: 1,
                  _0: React.createElement(Expr$Operator, {
                        value: op,
                        loc: loc
                      }),
                  [Symbol.for("name")]: "Complete"
                };
        }
    case /* App */4 :
        var q = expr._1;
        var f = handleExpr(n, expr._0);
        if (f.TAG === /* Expect */0) {
          return Curry._1(f._0, q);
        }
        var s = f._0;
        var g = handleExpr(n, q);
        if (g.TAG === /* Expect */0) {
          return {
                  TAG: 0,
                  _0: g._0,
                  [Symbol.for("name")]: "Expect"
                };
        }
        var t = g._0;
        if (q.TAG === /* App */4) {
          return {
                  TAG: 1,
                  _0: React.createElement(React.Fragment, undefined, s, React.createElement(Common$Guacamole.Space.make, {}), React.createElement(Common$Guacamole.Paren.make, {
                            activate: true,
                            children: t
                          })),
                  [Symbol.for("name")]: "Complete"
                };
        } else {
          return {
                  TAG: 1,
                  _0: React.createElement(React.Fragment, undefined, s, React.createElement(Common$Guacamole.Space.make, {}), t),
                  [Symbol.for("name")]: "Complete"
                };
        }
    case /* Lam */5 :
        return {
                TAG: 1,
                _0: React.createElement(Link$Guacamole.make, {
                      loc: expr._2,
                      children: null
                    }, "\\", expr._0, " -> ", React.createElement(make, makeProps(0, expr._1, undefined, undefined))),
                [Symbol.for("name")]: "Complete"
              };
    case /* Hole */6 :
        return {
                TAG: 1,
                _0: React.createElement(Link$Guacamole.make, {
                      loc: expr._0,
                      children: "[?]"
                    }),
                [Symbol.for("name")]: "Complete"
              };
    case /* Quant */7 :
        return {
                TAG: 1,
                _0: React.createElement(Link$Guacamole.make, {
                      loc: expr._4,
                      children: null
                    }, "<", React.createElement(Common$Guacamole.Space.make, {}), React.createElement(make, makeProps(-1, expr._0, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, {}), Util$Guacamole.React.sepBy(React.createElement(Common$Guacamole.Space.make, {}), $$Array.map((function (value) {
                                return React.createElement(Expr$Low, {
                                            value: value
                                          });
                              }), expr._1)), React.createElement(Common$Guacamole.Space.make, {}), ":", React.createElement(Common$Guacamole.Space.make, {}), React.createElement(make, makeProps(0, expr._2, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, {}), ":", React.createElement(Common$Guacamole.Space.make, {}), React.createElement(make, makeProps(0, expr._3, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, {}), ">"),
                [Symbol.for("name")]: "Complete"
              };
    case /* Subst */8 :
        return {
                TAG: 1,
                _0: React.createElement(Subst$Guacamole.make, {
                      expr: expr,
                      makePrec: make,
                      makePrecProps: (function (param) {
                          return function (param$1) {
                            var partial_arg = "";
                            return function (param$2) {
                              var tmp = {
                                prec: param,
                                value: param$1
                              };
                              if (partial_arg !== undefined) {
                                tmp.key = Caml_option.valFromOption(partial_arg);
                              }
                              return tmp;
                            };
                          };
                        })
                    }),
                [Symbol.for("name")]: "Complete"
              };
    case /* Unknown */9 :
        return {
                TAG: 1,
                _0: React.createElement(Link$Guacamole.make, {
                      loc: /* NoLoc */0,
                      children: "[? " + (JSON.stringify(expr._0) + " ?]")
                    }),
                [Symbol.for("name")]: "Complete"
              };
    
  }
}

function make(Props) {
  var prec = Props.prec;
  var value = Props.value;
  var s = handleExpr(prec, value);
  if (s.TAG === /* Expect */0) {
    return React.createElement(React.Fragment, undefined);
  } else {
    return s._0;
  }
}

var Prec = {
  handleOperator: handleOperator,
  handleExpr: handleExpr,
  make: make
};

function Expr(Props) {
  var value = Props.value;
  return React.createElement("div", {
              className: "expr"
            }, React.createElement(make, {
                  prec: 0,
                  value: value
                }));
}

var make$1 = Expr;

exports.Low = Low;
exports.Operator = Operator;
exports.Prec = Prec;
exports.make = make$1;
/* react Not a pure module */
