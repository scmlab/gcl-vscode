// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var GCL$Guacamole = require("../GCL.bs.js");
var Link$Guacamole = require("./Link.bs.js");
var Util$Guacamole = require("../Util/Util.bs.js");
var Subst$Guacamole = require("./Subst.bs.js");
var Common$Guacamole = require("./Common.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

function Expr$Paren(Props) {
  var activate = Props.activate;
  var children = Props.children;
  var match = React.useState((function () {
          return false;
        }));
  var setHover = match[1];
  var match$1 = React.useState((function () {
          return false;
        }));
  var setCollapse = match$1[1];
  var collapsed = match$1[0];
  var onMouseOver = function (param) {
    return Curry._1(setHover, (function (param) {
                  return true;
                }));
  };
  var onMouseLeave = function (param) {
    return Curry._1(setHover, (function (param) {
                  return false;
                }));
  };
  var onClick = function (param) {
    return Curry._1(setCollapse, (function (param) {
                  if (collapsed) {
                    return false;
                  } else {
                    return true;
                  }
                }));
  };
  var className = "expr-paren" + ((
      match[0] ? " hovered" : ""
    ) + (
      collapsed ? " collapsed" : ""
    ));
  if (activate) {
    if (collapsed) {
      return React.createElement("div", {
                  className: className,
                  onClick: onClick,
                  onMouseLeave: onMouseLeave,
                  onMouseOver: onMouseOver
                }, "(...)");
    } else {
      return React.createElement(React.Fragment, undefined, React.createElement("div", {
                      className: className,
                      onClick: onClick,
                      onMouseLeave: onMouseLeave,
                      onMouseOver: onMouseOver
                    }, "("), children, React.createElement("div", {
                      className: className,
                      onClick: onClick,
                      onMouseLeave: onMouseLeave,
                      onMouseOver: onMouseOver
                    }, ")"));
    }
  } else {
    return children;
  }
}

var Paren = {
  make: Expr$Paren
};

function Expr$Low(Props) {
  var value = Props.value;
  return React.createElement("div", undefined, Curry._1(GCL$Guacamole.Syntax.Name.toString, value));
}

var Low = {
  make: Expr$Low
};

function Expr$Operator(Props) {
  var value = Props.value;
  var loc = Props.loc;
  return React.createElement(Link$Guacamole.make, {
              loc: loc,
              children: Curry._1(GCL$Guacamole.Syntax.Op.toString, value)
            });
}

var Operator = {
  make: Expr$Operator
};

function handleOperator(n, op, loc) {
  var makeProps = function (prim, prim$1, prim$2, prim$3) {
    var tmp = {
      prec: prim,
      value: prim$1
    };
    if (prim$2 !== undefined) {
      tmp.key = Caml_option.valFromOption(prim$2);
    }
    return tmp;
  };
  var m = Curry._1(GCL$Guacamole.Syntax.Expr.Precedence.classify, op);
  switch (m.tag | 0) {
    case /* InfixL */0 :
        var m$1 = m[0];
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (q) {
                                    return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Expr$Paren, {
                                                    activate: n > m$1,
                                                    children: null
                                                  }, React.createElement(make, makeProps(m$1, p, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, { }), React.createElement(Expr$Operator, {
                                                        value: op,
                                                        loc: loc
                                                      }), React.createElement(Common$Guacamole.Space.make, { }), React.createElement(make, makeProps(m$1 + 1 | 0, q, undefined, undefined)))]);
                                  }));
                    }));
    case /* InfixR */1 :
        var m$2 = m[0];
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (q) {
                                    return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Expr$Paren, {
                                                    activate: n > m$2,
                                                    children: null
                                                  }, React.createElement(make, makeProps(m$2 + 1 | 0, p, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, { }), React.createElement(Expr$Operator, {
                                                        value: op,
                                                        loc: loc
                                                      }), React.createElement(Common$Guacamole.Space.make, { }), React.createElement(make, makeProps(m$2, q, undefined, undefined)))]);
                                  }));
                    }));
    case /* Infix */2 :
        var m$3 = m[0];
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (q) {
                                    return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Expr$Paren, {
                                                    activate: n > m$3,
                                                    children: null
                                                  }, React.createElement(make, makeProps(m$3 + 1 | 0, p, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, { }), React.createElement(Expr$Operator, {
                                                        value: op,
                                                        loc: loc
                                                      }), React.createElement(Common$Guacamole.Space.make, { }), React.createElement(make, makeProps(m$3 + 1 | 0, q, undefined, undefined)))]);
                                  }));
                    }));
    case /* Prefix */3 :
        var m$4 = m[0];
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Expr$Paren, {
                                      activate: n > m$4,
                                      children: null
                                    }, React.createElement(Expr$Operator, {
                                          value: op,
                                          loc: loc
                                        }), React.createElement(Common$Guacamole.Space.make, { }), React.createElement(make, makeProps(m$4, p, undefined, undefined)))]);
                    }));
    case /* Postfix */4 :
        var m$5 = m[0];
        return Curry._2(GCL$Guacamole.Syntax.VarArg.flatMap, GCL$Guacamole.Syntax.VarArg.$$var, (function (p) {
                      return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Expr$Paren, {
                                      activate: n > m$5,
                                      children: null
                                    }, React.createElement(make, makeProps(m$5, p, undefined, undefined)), React.createElement(Common$Guacamole.Space.make, { }), React.createElement(Expr$Operator, {
                                          value: op,
                                          loc: loc
                                        }))]);
                    }));
    
  }
}

function handleExpr(n) {
  var makeProps = function (prim, prim$1, prim$2, prim$3) {
    var tmp = {
      prec: prim,
      value: prim$1
    };
    if (prim$2 !== undefined) {
      tmp.key = Caml_option.valFromOption(prim$2);
    }
    return tmp;
  };
  return (function (loc) {
      switch (loc.tag | 0) {
        case /* Lit */0 :
            return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Link$Guacamole.make, {
                            loc: loc[1],
                            children: Curry._1(GCL$Guacamole.Syntax.Lit.toString, loc[0])
                          })]);
        case /* Var */1 :
        case /* Const */2 :
            break;
        case /* Op */3 :
            var loc$1 = loc[1];
            var op = loc[0];
            if (n >= 0) {
              return handleOperator(n, op, loc$1);
            } else {
              return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Expr$Operator, {
                              value: op,
                              loc: loc$1
                            })]);
            }
        case /* App */4 :
            var q = loc[1];
            var f = handleExpr(n)(loc[0]);
            if (!f.tag) {
              return Curry._1(f[0], q);
            }
            var s = f[0];
            var g = handleExpr(n)(q);
            if (!g.tag) {
              return /* Expect */Caml_chrome_debugger.variant("Expect", 0, [g[0]]);
            }
            var t = g[0];
            if (q.tag === /* App */4) {
              return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(React.Fragment, undefined, s, React.createElement(Common$Guacamole.Space.make, { }), React.createElement(Expr$Paren, {
                                  activate: true,
                                  children: t
                                }))]);
            } else {
              return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(React.Fragment, undefined, s, React.createElement(Common$Guacamole.Space.make, { }), t)]);
            }
        case /* Lam */5 :
            return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Link$Guacamole.make, {
                            loc: loc[2],
                            children: null
                          }, "\\", loc[0], " -> ", React.createElement(make, makeProps(0, loc[1], undefined, undefined)))]);
        case /* Hole */6 :
            return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Link$Guacamole.make, {
                            loc: loc[0],
                            children: "[?]"
                          })]);
        case /* Quant */7 :
            return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Link$Guacamole.make, {
                            loc: loc[4],
                            children: null
                          }, "<", React.createElement(Common$Guacamole.Space.make, { }), React.createElement(make, makeProps(-1, loc[0], undefined, undefined)), React.createElement(Common$Guacamole.Space.make, { }), Util$Guacamole.React.sepBy(React.createElement(Common$Guacamole.Space.make, { }), $$Array.map((function (value) {
                                      return React.createElement(Expr$Low, {
                                                  value: value
                                                });
                                    }), loc[1])), React.createElement(Common$Guacamole.Space.make, { }), ":", React.createElement(Common$Guacamole.Space.make, { }), React.createElement(make, makeProps(0, loc[2], undefined, undefined)), React.createElement(Common$Guacamole.Space.make, { }), ":", React.createElement(Common$Guacamole.Space.make, { }), React.createElement(make, makeProps(0, loc[3], undefined, undefined)), React.createElement(Common$Guacamole.Space.make, { }), ">")]);
        case /* Subst */8 :
            return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Link$Guacamole.make, {
                            loc: /* NoLoc */0,
                            children: React.createElement(Subst$Guacamole.make, {
                                  expr: loc[0],
                                  subst: loc[1],
                                  makePrec: make,
                                  makePrecProps: (function (param) {
                                      return (function (param$1) {
                                          var partial_arg = "";
                                          return (function (param$2) {
                                              var tmp = {
                                                prec: param,
                                                value: param$1
                                              };
                                              if (partial_arg !== undefined) {
                                                tmp.key = Caml_option.valFromOption(partial_arg);
                                              }
                                              return tmp;
                                            });
                                        });
                                    })
                                })
                          })]);
        case /* Unknown */9 :
            return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Link$Guacamole.make, {
                            loc: /* NoLoc */0,
                            children: "[? " + (JSON.stringify(loc[0]) + " ?]")
                          })]);
        
      }
      return /* Complete */Caml_chrome_debugger.variant("Complete", 1, [React.createElement(Link$Guacamole.make, {
                      loc: loc[1],
                      children: Curry._1(GCL$Guacamole.Syntax.Name.toString, loc[0])
                    })]);
    });
}

function make(Props) {
  var prec = Props.prec;
  var value = Props.value;
  var s = handleExpr(prec)(value);
  if (s.tag) {
    return s[0];
  } else {
    return React.createElement(React.Fragment, undefined);
  }
}

var Prec = {
  handleOperator: handleOperator,
  handleExpr: handleExpr,
  make: make
};

function Expr(Props) {
  var value = Props.value;
  return React.createElement("div", {
              className: "expr"
            }, React.createElement(make, {
                  prec: 0,
                  value: value
                }));
}

var make$1 = Expr;

exports.Paren = Paren;
exports.Low = Low;
exports.Operator = Operator;
exports.Prec = Prec;
exports.make = make$1;
/* react Not a pure module */
