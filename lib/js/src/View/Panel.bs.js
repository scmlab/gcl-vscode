// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Chan$Guacamole = require("../Util/Chan.bs.js");
var Link$Guacamole = require("./Link.bs.js");
var Subst$Guacamole = require("./Subst.bs.js");
var GlobalProps$Guacamole = require("./GlobalProps.bs.js");
var ProofObligations$Guacamole = require("./ProofObligations.bs.js");

function Panel(Props) {
  var onRequest = Props.onRequest;
  var onResponse = Props.onResponse;
  var match = React.useState(function () {
        return [
                0,
                [],
                []
              ];
      });
  var setDisplay = match[1];
  var match$1 = match[0];
  var id = match$1[0];
  var match$2 = React.useState(function () {
        return false;
      });
  var setHidden = match$2[1];
  var onClickLink = React.useRef(Chan$Guacamole.make(undefined));
  var onSubstitute = React.useRef(Chan$Guacamole.make(undefined));
  React.useEffect((function () {
          Chan$Guacamole.emit(onResponse, /* Initialized */1);
          
        }), []);
  React.useEffect((function () {
          return Chan$Guacamole.on(onRequest, (function (req) {
                        if (typeof req === "number") {
                          if (req === /* Show */0) {
                            return Curry._1(setHidden, (function (param) {
                                          return false;
                                        }));
                          } else {
                            return Curry._1(setHidden, (function (param) {
                                          return true;
                                        }));
                          }
                        }
                        if (req.TAG === /* Substitute */0) {
                          return Chan$Guacamole.emit(onSubstitute.current, {
                                      TAG: 1,
                                      _0: req._0,
                                      _1: req._1,
                                      [Symbol.for("name")]: "Response"
                                    });
                        }
                        var props = req._2;
                        var pos = req._1;
                        var id = req._0;
                        return Curry._1(setDisplay, (function (param) {
                                      return [
                                              id,
                                              pos,
                                              props
                                            ];
                                    }));
                      }));
        }), []);
  React.useEffect((function () {
          return Chan$Guacamole.on(onClickLink.current, (function (ev) {
                        return Chan$Guacamole.emit(onResponse, {
                                    TAG: 0,
                                    _0: ev,
                                    [Symbol.for("name")]: "Link"
                                  });
                      }));
        }), []);
  React.useEffect((function () {
          return Chan$Guacamole.on(onSubstitute.current, (function (x) {
                        if (x.TAG === /* Request */0) {
                          return Chan$Guacamole.emit(onResponse, {
                                      TAG: 1,
                                      _0: x._0,
                                      _1: x._1,
                                      _2: x._2,
                                      [Symbol.for("name")]: "Substitute"
                                    });
                        }
                        
                      }));
        }), []);
  var onExport = function (param) {
    return Chan$Guacamole.emit(onResponse, /* ExportProofObligations */0);
  };
  var className = "gcl-panel native-key-bindings" + (
    match$2[0] ? " hidden" : ""
  );
  return React.createElement(Subst$Guacamole.Provider.make, Subst$Guacamole.Provider.makeProps(onSubstitute.current, React.createElement(Link$Guacamole.Provider.make, Link$Guacamole.Provider.makeProps(onClickLink.current, React.createElement("section", {
                              className: className,
                              tabIndex: -1
                            }, React.createElement(ProofObligations$Guacamole.make, {
                                  id: id,
                                  pos: match$1[1],
                                  onExport: onExport
                                }), React.createElement(GlobalProps$Guacamole.make, {
                                  id: id,
                                  props: match$1[2]
                                })), undefined)), undefined));
}

var make = Panel;

exports.make = make;
/* react Not a pure module */
