// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Chan$Guacamole = require("../Util/Chan.bs.js");
var Link$Guacamole = require("./Link.bs.js");
var ReqID$Guacamole = require("./ReqID.bs.js");
var Element$Guacamole = require("./Element.bs.js");
var DevPanel$Guacamole = require("./DevPanel.bs.js");

function Panel(Props) {
  var onRequest = Props.onRequest;
  var onResponse = Props.onResponse;
  var match = React.useState(function () {
        
      });
  var setConnection = match[1];
  var match$1 = React.useState(function () {
        return [
                0,
                []
              ];
      });
  var setDisplay = match$1[1];
  var match$2 = match$1[0];
  var blocks = match$2[1];
  var onClickLink = React.useRef(Chan$Guacamole.make(undefined));
  React.useEffect((function () {
          Chan$Guacamole.emit(onResponse, /* Initialized */1);
          
        }), []);
  React.useEffect((function () {
          return Chan$Guacamole.on(onRequest, (function (req) {
                        if (req.TAG === /* UpdateConnection */0) {
                          var method = req._0;
                          return Curry._1(setConnection, (function (param) {
                                        return method;
                                      }));
                        }
                        var blocks = req._1;
                        var id = req._0;
                        return Curry._1(setDisplay, (function (param) {
                                      return [
                                              id,
                                              blocks
                                            ];
                                    }));
                      }));
        }), []);
  React.useEffect((function () {
          return Chan$Guacamole.on(onClickLink.current, (function (ev) {
                        return Chan$Guacamole.emit(onResponse, {
                                    _0: ev,
                                    [Symbol.for("name")]: "Link"
                                  });
                      }));
        }), []);
  var blocks$1 = blocks.length === 0 ? React.createElement(React.Fragment, undefined) : React.createElement("ul", undefined, Belt_Array.mapWithIndex(blocks, (function (i, value) {
                return React.createElement(Element$Guacamole.Block.make, {
                            value: value,
                            key: String(i)
                          });
              })));
  return React.createElement(Link$Guacamole.Provider.make, Link$Guacamole.Provider.makeProps(onClickLink.current, React.createElement(ReqID$Guacamole.Provider.make, ReqID$Guacamole.Provider.makeProps(match$2[0], React.createElement("section", {
                              className: "gcl-panel native-key-bindings",
                              tabIndex: -1
                            }, React.createElement(DevPanel$Guacamole.make, {
                                  method: match[0]
                                }), blocks$1), undefined)), undefined));
}

var make = Panel;

exports.make = make;
/* react Not a pure module */
