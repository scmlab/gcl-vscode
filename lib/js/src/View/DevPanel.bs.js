// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");

function DevPanel(Props) {
  var method = Props.method;
  var method$1;
  if (method !== undefined) {
    switch (method.TAG | 0) {
      case /* ViaStdIO */0 :
          method$1 = React.createElement(React.Fragment, undefined, React.createElement("div", {
                    className: "connected",
                    id: "gcl-dev-panel-status"
                  }, React.createElement("i", {
                        className: "codicon codicon-circle-large-filled"
                      }), React.createElement("span", undefined, "connected (stdio)")));
          break;
      case /* ViaTCP */1 :
          method$1 = React.createElement(React.Fragment, undefined, React.createElement("div", {
                    className: "connected",
                    id: "gcl-dev-panel-status"
                  }, React.createElement("i", {
                        className: "codicon codicon-circle-large-filled"
                      }), React.createElement("span", undefined, "connected (tcp)")));
          break;
      case /* ViaPrebuilt */2 :
          method$1 = React.createElement(React.Fragment, undefined, React.createElement("div", {
                    className: "connected",
                    id: "gcl-dev-panel-status"
                  }, React.createElement("i", {
                        className: "codicon codicon-circle-large-filled"
                      }), React.createElement("span", undefined, method._0)));
          break;
      
    }
  } else {
    method$1 = React.createElement("div", {
          className: "disconnected",
          id: "gcl-dev-panel-status"
        }, React.createElement("i", {
              className: "codicon codicon-circle-large-filled"
            }), React.createElement("span", undefined, "disconnected"));
  }
  return React.createElement("div", {
              className: "gcl-dev-panel"
            }, React.createElement("div", {
                  id: "gcl-dev-panel-header"
                }, "dev mode"), method$1);
}

var make = DevPanel;

exports.make = make;
/* react Not a pure module */
