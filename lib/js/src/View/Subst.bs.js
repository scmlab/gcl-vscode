// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Util$Guacamole = require("../Util/Util.bs.js");
var Event$Guacamole = require("../Util/Event.bs.js");
var ReqID$Guacamole = require("./ReqID.bs.js");
var Common$Guacamole = require("./Common.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");

var emitter = Event$Guacamole.make(/* () */0);

var eventContext = React.createContext(emitter);

function makeProps(value, children, param) {
  return {
          value: value,
          children: children
        };
}

var make = eventContext.Provider;

var Provider = {
  makeProps: makeProps,
  make: make
};

var counter = {
  contents: 0
};

function Subst(Props) {
  var expr = Props.expr;
  var subst = Props.subst;
  var makeExpr = Props.makeExpr;
  var makeExprProps = Props.makeExprProps;
  var emitter = React.useContext(eventContext);
  var match = React.useState((function () {
          return false;
        }));
  var setHover = match[1];
  var match$1 = React.useState((function () {
          return ;
        }));
  var setReduced = match$1[1];
  var reduced = match$1[0];
  var id = React.useRef(undefined);
  var reqID = React.useRef(undefined);
  var onMouseOver = function (param) {
    return Curry._1(setHover, (function (param) {
                  return true;
                }));
  };
  var onMouseLeave = function (param) {
    return Curry._1(setHover, (function (param) {
                  return false;
                }));
  };
  var onClick = function (param) {
    Curry._1(emitter.emit, /* Request */Caml_chrome_debugger.variant("Request", 0, [
            counter.contents,
            expr,
            subst
          ]));
    id.current = counter.contents;
    counter.contents = counter.contents + 1 | 0;
    return /* () */0;
  };
  var className = "expr-subst" + ((
      match[0] ? " hovered" : ""
    ) + (
      Belt_Option.isSome(reduced) ? " reduced" : ""
    ));
  if (reduced !== undefined) {
    var cachedID = reduced[0];
    if (cachedID !== undefined) {
      console.log("Current cached ID: " + String(cachedID));
    } else {
      console.log("Current cached ID: _");
    }
    if (Caml_obj.caml_notequal(cachedID, reqID.current)) {
      console.log("invalidate!! ");
      Curry._1(setReduced, (function (param) {
              return ;
            }));
    }
    
  }
  reqID.current = React.useContext(ReqID$Guacamole.context);
  var match$2 = reqID.current;
  if (match$2 !== undefined) {
    console.log("Current Req: " + String(match$2));
  } else {
    console.log("Current Req: _");
  }
  React.useEffect((function () {
          return Curry._1(emitter.on, (function (param) {
                        if (param.tag && Caml_obj.caml_equal(param[0], id.current)) {
                          var expr = param[1];
                          var match = reqID.current;
                          if (match !== undefined) {
                            console.log("Saved Req: " + String(match));
                          } else {
                            console.log("Saved Req: _");
                          }
                          return Curry._1(setReduced, (function (param) {
                                        return /* tuple */[
                                                reqID.current,
                                                expr
                                              ];
                                      }));
                        } else {
                          return 0;
                        }
                      }));
        }), []);
  if (reduced !== undefined) {
    return React.createElement(makeExpr, Curry._3(makeExprProps, 0, reduced[1], /* () */0));
  } else {
    var e = Belt_Array.map(Js_dict.entries(subst), (function (param) {
            return React.createElement(React.Fragment, undefined, React.createElement(makeExpr, Curry._3(makeExprProps, 0, param[1], /* () */0)), "/" + param[0]);
          }));
    return React.createElement(React.Fragment, undefined, React.createElement(makeExpr, Curry._3(makeExprProps, 0, expr, /* () */0)), React.createElement(Common$Guacamole.Space.make, { }), React.createElement("div", {
                    className: className,
                    onClick: onClick,
                    onMouseLeave: onMouseLeave,
                    onMouseOver: onMouseOver
                  }, "[", Util$Guacamole.React.sepBy(", ", e), "]"));
  }
}

var make$1 = Subst;

exports.emitter = emitter;
exports.eventContext = eventContext;
exports.Provider = Provider;
exports.counter = counter;
exports.make = make$1;
/* emitter Not a pure module */
