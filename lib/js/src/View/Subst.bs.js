// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var GCL$Guacamole = require("../GCL.bs.js");
var Link$Guacamole = require("./Link.bs.js");
var Util$Guacamole = require("../Util/Util.bs.js");
var ReqID$Guacamole = require("./ReqID.bs.js");
var Common$Guacamole = require("./Common.bs.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var Event$AgdaModeVscode = require("agda-mode-vscode/lib/js/src/Util/Event.bs.js");

var emitter = Event$AgdaModeVscode.make(undefined);

var eventContext = React.createContext(emitter);

function makeProps(value, children, param) {
  return {
          value: value,
          children: children
        };
}

var make = eventContext.Provider;

var Provider = {
  makeProps: makeProps,
  make: make
};

var counter = {
  contents: 0
};

function Subst(Props) {
  var expr = Props.expr;
  var makePrec = Props.makePrec;
  var makePrecProps = Props.makePrecProps;
  var subst = { };
  var emitter = React.useContext(eventContext);
  var match = React.useState((function () {
          return /* Unreduced */Caml_chrome_debugger.variant("Unreduced", 0, [expr]);
        }));
  var setRedux = match[1];
  var redux = match[0];
  var id = React.useRef(undefined);
  var reqID = React.useRef(undefined);
  var match$1 = React.useState((function () {
          return false;
        }));
  var setHover = match$1[1];
  var onMouseOver = function (param) {
    return Curry._1(setHover, (function (param) {
                  return true;
                }));
  };
  var onMouseLeave = function (param) {
    return Curry._1(setHover, (function (param) {
                  return false;
                }));
  };
  var onClick = function (param) {
    Curry._1(emitter.emit, /* Request */Caml_chrome_debugger.variant("Request", 0, [
            counter.contents,
            expr,
            subst
          ]));
    id.current = counter.contents;
    counter.contents = counter.contents + 1 | 0;
    
  };
  var tmp;
  tmp = typeof redux === "number" || !redux.tag ? "" : " reduced";
  var className = "expr-subst" + ((
      match$1[0] ? " hovered" : ""
    ) + tmp);
  reqID.current = React.useContext(ReqID$Guacamole.context);
  if (typeof redux !== "number" && redux.tag) {
    if (Caml_obj.caml_notequal(redux[0], reqID.current)) {
      Curry._1(setRedux, (function (param) {
              return /* Unreduced */Caml_chrome_debugger.variant("Unreduced", 0, [expr]);
            }));
    }
    
  }
  React.useEffect((function () {
          return Curry._1(emitter.on, (function (param) {
                        if (!param.tag) {
                          return ;
                        }
                        if (!Caml_obj.caml_equal(param[0], id.current)) {
                          return ;
                        }
                        var expr = param[1];
                        return Curry._1(setRedux, (function (param) {
                                      return /* Reduced */Caml_chrome_debugger.variant("Reduced", 1, [
                                                reqID.current,
                                                expr
                                              ]);
                                    }));
                      }));
        }), []);
  if (typeof redux === "number") {
    return React.createElement(React.Fragment, undefined, "...");
  }
  if (redux.tag) {
    return React.createElement(Common$Guacamole.Paren.make, {
                activate: true,
                children: React.createElement(makePrec, Curry._3(makePrecProps, 0, redux[1], undefined))
              });
  }
  var expr$1 = redux[0];
  switch (expr$1.tag | 0) {
    case /* Const */2 :
        return React.createElement(Link$Guacamole.make, {
                    loc: expr$1[1],
                    children: React.createElement("div", {
                          className: className,
                          onClick: onClick,
                          onMouseLeave: onMouseLeave,
                          onMouseOver: onMouseOver
                        }, Curry._1(GCL$Guacamole.Syntax.Name.toString, expr$1[0]))
                  });
    case /* Subst */8 :
        var subst$1 = expr$1[1];
        var expressions = Belt_Array.map(Js_dict.values(subst$1), (function (value) {
                return React.createElement(makePrec, Curry._3(makePrecProps, 0, value, undefined));
              }));
        var variables = Belt_Array.map(Object.keys(subst$1), (function (value) {
                return React.createElement(React.Fragment, undefined, value);
              }));
        return React.createElement(Link$Guacamole.make, {
                    loc: /* NoLoc */0,
                    children: null
                  }, React.createElement(makePrec, Curry._3(makePrecProps, 0, expr$1[0], undefined)), React.createElement(Common$Guacamole.Space.make, { }), React.createElement("div", {
                        className: className,
                        onClick: onClick,
                        onMouseLeave: onMouseLeave,
                        onMouseOver: onMouseOver
                      }, "[", Util$Guacamole.React.sepBy(", ", expressions), "/", Util$Guacamole.React.sepBy(", ", variables), "]"));
    default:
      return React.createElement(React.Fragment, undefined);
  }
}

var make$1 = Subst;

exports.emitter = emitter;
exports.eventContext = eventContext;
exports.Provider = Provider;
exports.counter = counter;
exports.make = make$1;
/* emitter Not a pure module */
