// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");

function make(param) {
  return {
          history: []
        };
}

function push(self, undo) {
  self.history.push(undo);
  
}

function pop(self) {
  var undo = self.history.pop();
  if (undo !== undefined) {
    return Curry._1(undo, undefined);
  }
  
}

function isEmpty(self) {
  return self.history.length === 0;
}

var context = React.createContext({
      history: []
    });

var provider = context.Provider;

function History$Context$Provider(Props) {
  var value = Props.value;
  var children = Props.children;
  return React.createElement(provider, {
              value: value,
              children: children
            });
}

var Provider = {
  provider: provider,
  make: History$Context$Provider
};

var Context = {
  context: context,
  Provider: Provider
};

function History$View(Props) {
  var hidden = Props.hidden;
  var className = "element-block-code-history" + (
    hidden ? " hidden" : ""
  );
  return React.createElement("div", {
              className: className
            }, "asdf");
}

var View = {
  make: History$View
};

exports.make = make;
exports.push = push;
exports.pop = pop;
exports.isEmpty = isEmpty;
exports.Context = Context;
exports.View = View;
/* context Not a pure module */
