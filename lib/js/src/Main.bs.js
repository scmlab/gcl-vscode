// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Editor$Guacamole = require("./Editor.bs.js");
var States$Guacamole = require("./States.bs.js");

var include = States$Guacamole.Impl({
      Disposable: Editor$Guacamole.Disposable,
      Point: {
        line: Editor$Guacamole.Point.line,
        column: Editor$Guacamole.Point.column,
        make: Editor$Guacamole.Point.make,
        translate: Editor$Guacamole.Point.translate,
        fromPos: Editor$Guacamole.Point.fromPos,
        toPos: Editor$Guacamole.Point.toPos
      },
      $$Range: Editor$Guacamole.$$Range,
      editorType: Editor$Guacamole.editorType,
      getExtensionPath: Editor$Guacamole.getExtensionPath,
      getFileName: Editor$Guacamole.getFileName,
      save: Editor$Guacamole.save,
      onDidChangeFileName: Editor$Guacamole.onDidChangeFileName,
      onDidChangeActivation: Editor$Guacamole.onDidChangeActivation,
      onDidCloseEditor: Editor$Guacamole.onDidCloseEditor,
      registerCommand: Editor$Guacamole.registerCommand,
      addToSubscriptions: Editor$Guacamole.addToSubscriptions,
      Config: {
        getGCLPath: Editor$Guacamole.Config.getGCLPath,
        setGCLPath: Editor$Guacamole.Config.setGCLPath
      },
      View: {
        make: Editor$Guacamole.View.make,
        destroy: Editor$Guacamole.View.destroy,
        show: Editor$Guacamole.View.show,
        hide: Editor$Guacamole.View.hide,
        send: Editor$Guacamole.View.send,
        recv: Editor$Guacamole.View.recv
      },
      Decoration: Editor$Guacamole.Decoration,
      getCursorPosition: Editor$Guacamole.getCursorPosition,
      rangeForLine: Editor$Guacamole.rangeForLine,
      getText: Editor$Guacamole.getText,
      selectText: Editor$Guacamole.selectText,
      insertText: Editor$Guacamole.insertText,
      deleteText: Editor$Guacamole.deleteText
    });

var States = include.States;

var TaskRunner = include.TaskRunner;

var Task = include.Task;

var State = include.State;

var addToSubscriptions = include.addToSubscriptions;

var activate = include.activate;

var deactivate = include.deactivate;

exports.States = States;
exports.TaskRunner = TaskRunner;
exports.Task = Task;
exports.State = State;
exports.addToSubscriptions = addToSubscriptions;
exports.activate = activate;
exports.deactivate = deactivate;
/* include Not a pure module */
