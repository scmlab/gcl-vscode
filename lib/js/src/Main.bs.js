// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var States$Guacamole = require("./States.bs.js");
var Impl__Editor$Guacamole = require("./Implementation/Impl__Editor.bs.js");

var include = States$Guacamole.Impl({
      Disposable: Impl__Editor$Guacamole.Disposable,
      Point: {
        line: Impl__Editor$Guacamole.Point.line,
        column: Impl__Editor$Guacamole.Point.column,
        make: Impl__Editor$Guacamole.Point.make,
        translate: Impl__Editor$Guacamole.Point.translate,
        fromPos: Impl__Editor$Guacamole.Point.fromPos,
        toPos: Impl__Editor$Guacamole.Point.toPos
      },
      $$Range: Impl__Editor$Guacamole.$$Range,
      editorType: Impl__Editor$Guacamole.editorType,
      getExtensionPath: Impl__Editor$Guacamole.getExtensionPath,
      getFileName: Impl__Editor$Guacamole.getFileName,
      save: Impl__Editor$Guacamole.save,
      onDidChangeFileName: Impl__Editor$Guacamole.onDidChangeFileName,
      onDidChangeActivation: Impl__Editor$Guacamole.onDidChangeActivation,
      onDidCloseEditor: Impl__Editor$Guacamole.onDidCloseEditor,
      registerCommand: Impl__Editor$Guacamole.registerCommand,
      addToSubscriptions: Impl__Editor$Guacamole.addToSubscriptions,
      Config: {
        getGCLPath: Impl__Editor$Guacamole.Config.getGCLPath,
        setGCLPath: Impl__Editor$Guacamole.Config.setGCLPath
      },
      View: {
        make: Impl__Editor$Guacamole.View.make,
        destroy: Impl__Editor$Guacamole.View.destroy,
        show: Impl__Editor$Guacamole.View.show,
        hide: Impl__Editor$Guacamole.View.hide,
        send: Impl__Editor$Guacamole.View.send,
        recv: Impl__Editor$Guacamole.View.recv
      },
      Decoration: Impl__Editor$Guacamole.Decoration,
      select: Impl__Editor$Guacamole.select,
      getCursorPosition: Impl__Editor$Guacamole.getCursorPosition,
      rangeForLine: Impl__Editor$Guacamole.rangeForLine,
      textForRange: Impl__Editor$Guacamole.textForRange
    });

var States = include.States;

var TaskCommand = include.TaskCommand;

var TaskRunner = include.TaskRunner;

var State = include.State;

var addToSubscriptions = include.addToSubscriptions;

var activate = include.activate;

var deactivate = include.deactivate;

exports.States = States;
exports.TaskCommand = TaskCommand;
exports.TaskRunner = TaskRunner;
exports.State = State;
exports.addToSubscriptions = addToSubscriptions;
exports.activate = activate;
exports.deactivate = deactivate;
/* include Not a pure module */
