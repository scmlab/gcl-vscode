// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Vscode = require("vscode");
var $$Promise = require("reason-promise/lib/js/src/js/promise.bs.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var State$Guacamole = require("./State.bs.js");
var Registry$Guacamole = require("./Registry.bs.js");

var partial_arg = /\.gcl$/i;

function isGCL(param) {
  return partial_arg.test(param);
}

function onSelect($$event) {
  var selections = $$event.selections;
  var editor = $$event.textEditor;
  var filePath = editor.document.fileName;
  return Belt_Option.forEach(Registry$Guacamole.get(filePath), (function (state) {
                return Belt_Option.forEach(Belt_Array.get(selections, 0), (function (selection) {
                              var start = state.document.offsetAt(selection.start);
                              var end_ = state.document.offsetAt(selection.end);
                              return $$Promise.getOk(State$Guacamole.sendRequest(state, {
                                              TAG: 1,
                                              _0: state.filePath,
                                              _1: start,
                                              _2: end_,
                                              [Symbol.for("name")]: "Inspect"
                                            }), (function (param) {
                                            return State$Guacamole.handleResponse(state, param);
                                          }));
                            }));
              }));
}

function onOpen(context, editor) {
  var filePath = editor.document.fileName;
  if (!Curry._1(isGCL, filePath)) {
    return ;
  }
  console.log("OPEN " + filePath);
  console.log("size " + String(Registry$Guacamole.size(undefined)));
  var match = Registry$Guacamole.get(filePath);
  if (match !== undefined) {
    return ;
  }
  var state = State$Guacamole.make(editor);
  return Registry$Guacamole.add(filePath, state);
}

function onClose(doc) {
  var filePath = doc.fileName;
  if (Curry._1(isGCL, filePath)) {
    console.log("CLOSE " + filePath);
    console.log("size " + String(Registry$Guacamole.size(undefined)));
    return Registry$Guacamole.destroy(filePath);
  }
  
}

var Handler = {
  isGCL: isGCL,
  onSelect: onSelect,
  onOpen: onOpen,
  onClose: onClose
};

function activate(context) {
  var subscribe = function (x) {
    context.subscriptions.push(x);
    
  };
  Belt_Option.forEach(Vscode.window.activeTextEditor, (function (param) {
          return onOpen(context, param);
        }));
  subscribe(Vscode.window.onDidChangeActiveTextEditor(function (next) {
            return Belt_Option.forEach(next, (function (param) {
                          return onOpen(context, param);
                        }));
          }));
  subscribe(Vscode.workspace.onDidCloseTextDocument(onClose));
  subscribe(Vscode.window.onDidChangeTextEditorSelection(onSelect));
  
}

function deactivate(param) {
  
}

exports.Handler = Handler;
exports.activate = activate;
exports.deactivate = deactivate;
/* vscode Not a pure module */
