// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var VSCode = require("bs-vscode/lib/js/src/VSCode.bs.js");
var Vscode = require("vscode");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var GCL$Guacamole = require("./GCL.bs.js");
var Req$Guacamole = require("./Util/Req.bs.js");
var Chan$Guacamole = require("./Util/Chan.bs.js");

function subscribe(disposable, state) {
  state.subscriptions.push(disposable);
  
}

function handleResponseKind(state, kind) {
  switch (kind.TAG | 0) {
    case /* Decorate */0 :
        Belt_Array.forEach(state.decorations, (function (prim) {
                prim.dispose();
                
              }));
        state.decorations = [];
        var ranges = Belt_Array.map(kind._0, GCL$Guacamole.Loc.toRange);
        var rangeBehavior = VSCode.DecorationRangeBehavior.toEnum(/* ClosedClosed */1);
        var rulerColor = VSCode.StringOr.others(new Vscode.ThemeColor("editorOverviewRuler.warningForeground"));
        var overviewRulerLane = VSCode.OverviewRulerLane.toEnum(/* Left */0);
        var backgroundColor = VSCode.StringOr.others(new Vscode.ThemeColor("editorOverviewRuler.warningForeground"));
        var after = {
          color: backgroundColor,
          contentText: "*"
        };
        var options = {
          after: after,
          overviewRulerColor: rulerColor,
          overviewRulerLane: overviewRulerLane,
          rangeBehavior: rangeBehavior
        };
        var decoration = Vscode.window.createTextEditorDecorationType(options);
        state.decorations.push(decoration);
        state.editor.setDecorations(decoration, ranges);
        return ;
    case /* Error */1 :
        console.error(kind._0);
        return ;
    case /* OK */2 :
        Req$Guacamole.send(state.viewReq, {
              TAG: 1,
              _0: {
                TAG: 0,
                _0: "Proof Obligations",
                [Symbol.for("name")]: "Plain"
              },
              _1: {
                TAG: 0,
                _0: kind._0,
                _1: kind._1,
                _2: kind._3,
                [Symbol.for("name")]: "ProofObligations"
              },
              [Symbol.for("name")]: "Display"
            });
        return ;
    default:
      return ;
  }
}

function handleResponse(state, response) {
  if (!response.TAG) {
    return handleResponseKind(state, response._1);
  }
  console.error(response._0);
  
}

function make(editor) {
  var $$document = editor.document;
  var filePath = $$document.fileName;
  return {
          editor: editor,
          document: $$document,
          filePath: filePath,
          viewReq: Req$Guacamole.make(undefined),
          viewResChan: Chan$Guacamole.make(undefined),
          decorations: [],
          subscriptions: []
        };
}

function destroy(state) {
  Belt_Array.forEach(state.decorations, (function (prim) {
          prim.dispose();
          
        }));
  state.decorations = [];
  Belt_Array.forEach(state.subscriptions, (function (prim) {
          return prim.dispose();
        }));
  state.subscriptions = [];
  
}

exports.subscribe = subscribe;
exports.handleResponseKind = handleResponseKind;
exports.handleResponse = handleResponse;
exports.make = make;
exports.destroy = destroy;
/* VSCode Not a pure module */
