// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var VSCode = require("bs-vscode/lib/js/src/VSCode.bs.js");
var Vscode = require("vscode");
var $$Promise = require("reason-promise/lib/js/src/js/promise.bs.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var LSP$Guacamole = require("./LSP.bs.js");
var View$Guacamole = require("./View.bs.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");
var Response$Guacamole = require("./Response.bs.js");
var VscodeLanguageclient = require("vscode-languageclient");

function make(editor) {
  var setupLSPClient = function (param) {
    var serverOptions = LSP$Guacamole.ServerOptions.makeCommand("gcl");
    var documentSelector = [VSCode.DocumentFilterOrString.documentFilter({
            language: "guacamole",
            pattern: undefined,
            scheme: "file"
          })];
    var synchronize = Vscode.workspace.createFileSystemWatcher('**/.clientrc', false, false, false);
    var clientOptions = LSP$Guacamole.LanguageClientOptions.make(documentSelector, synchronize);
    return new VscodeLanguageclient.LanguageClient("guacamoleLanguageServer", "Guacamole Language Server", serverOptions, clientOptions);
  };
  var client = setupLSPClient(undefined);
  client.start();
  var $$document = editor.document;
  var state = {
    client: client,
    editor: editor,
    document: $$document,
    view: undefined,
    pos: []
  };
  $$Promise.getOk($$Promise.Js.toResult(client.onReady()), (function (param) {
          client.onNotification("guacamole/pos", (function (result) {
                  console.log("pos >>>", result);
                  var others;
                  try {
                    others = Response$Guacamole.decode(result);
                  }
                  catch (raw_msg){
                    var msg = Caml_js_exceptions.internalToOCamlException(raw_msg);
                    if (msg.RE_EXN_ID === Json_decode.DecodeError) {
                      console.log(msg._1);
                      return ;
                    }
                    throw msg;
                  }
                  if (others.TAG === /* OK */1) {
                    state.pos = others._1;
                    return Belt_Option.forEach(state.view, (function (view) {
                                  View$Guacamole.send(view, {
                                        TAG: 1,
                                        _0: {
                                          TAG: 0,
                                          _0: "Proof Obligations",
                                          [Symbol.for("name")]: "Plain"
                                        },
                                        _1: {
                                          TAG: 0,
                                          _0: 0,
                                          _1: state.pos,
                                          _2: [],
                                          [Symbol.for("name")]: "ProofObligations"
                                        },
                                        [Symbol.for("name")]: "Display"
                                      });
                                  
                                }));
                  }
                  console.log(others);
                  
                }));
          
        }));
  return state;
}

function destroy(state) {
  state.client.stop();
  
}

exports.make = make;
exports.destroy = destroy;
/* VSCode Not a pure module */
