// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Vscode = require("vscode");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");
var Json_encode = require("@glennsl/bs-json/lib/js/src/Json_encode.bs.js");
var Util$Guacamole = require("./Util/Util.bs.js");

function toPoint(x) {
  return new Vscode.Position(x._1 - 1 | 0, x._2 - 1 | 0);
}

function fromPoint(point, filepath) {
  return {
          _0: filepath,
          _1: point.line + 1 | 0,
          _2: point.character + 1 | 0,
          [Symbol.for("name")]: "Pos"
        };
}

function toString(x) {
  return String(x._1) + ":" + String(x._2);
}

function translate(by, x) {
  return {
          _0: x._0,
          _1: x._1 + by._1 | 0,
          _2: x._2 + by._2 | 0,
          [Symbol.for("name")]: "Pos"
        };
}

function translateBy(y, x, point) {
  return {
          _0: point._0,
          _1: point._1 + y | 0,
          _2: point._2 + x | 0,
          [Symbol.for("name")]: "Pos"
        };
}

function decode(param) {
  return Json_decode.map((function (param) {
                return {
                        _0: param[0],
                        _1: param[1],
                        _2: param[2],
                        [Symbol.for("name")]: "Pos"
                      };
              }), (function (param) {
                return Json_decode.tuple4(Json_decode.string, Json_decode.$$int, Json_decode.$$int, Json_decode.$$int, param);
              }), param);
}

function encode(x) {
  return Json_encode.tuple4((function (prim) {
                return prim;
              }), (function (prim) {
                return prim;
              }), (function (prim) {
                return prim;
              }), (function (prim) {
                return prim;
              }), [
              x._0,
              x._1,
              x._2,
              0
            ]);
}

var Pos = {
  toPoint: toPoint,
  fromPoint: fromPoint,
  toString: toString,
  translate: translate,
  translateBy: translateBy,
  decode: decode,
  encode: encode
};

function toRange(x) {
  var match = x._1;
  return new Vscode.Range(toPoint(x._0), new Vscode.Position(match._1 - 1 | 0, match._2));
}

function toString$1(range) {
  var match = range._1;
  var col2 = match._2;
  var line2 = match._1;
  var match$1 = range._0;
  var col1 = match$1._2;
  var line1 = match$1._1;
  if (line1 === line2) {
    return String(line1) + ":" + String(col1) + "-" + String(col2);
  } else {
    return String(line1) + ":" + String(col1) + "-" + String(line2) + ":" + String(col2);
  }
}

function translate$1(by, x) {
  return {
          _0: translate(x._0, by._0),
          _1: translate(x._1, by._1),
          [Symbol.for("name")]: "Range"
        };
}

function translateBy$1(startY, startX, endY, endX, x) {
  return {
          _0: translateBy(startY, startX, x._0),
          _1: translateBy(endY, endX, x._1),
          [Symbol.for("name")]: "Range"
        };
}

function decode$1(param) {
  return Json_decode.map((function (param) {
                return {
                        _0: param[0],
                        _1: param[1],
                        [Symbol.for("name")]: "Range"
                      };
              }), (function (param) {
                return Json_decode.pair(decode, decode, param);
              }), param);
}

function encode$1(x) {
  return Json_encode.pair(encode, encode, [
              x._0,
              x._1
            ]);
}

var $$Range = {
  toRange: toRange,
  toString: toString$1,
  translate: translate$1,
  translateBy: translateBy$1,
  decode: decode$1,
  encode: encode$1
};

function toRange$1(x) {
  if (!x) {
    return new Vscode.Range(new Vscode.Position(0, 0), new Vscode.Position(0, 0));
  }
  var match = x._1;
  return new Vscode.Range(toPoint(x._0), new Vscode.Position(match._1 - 1 | 0, match._2));
}

function toString$2(x) {
  if (x) {
    return toString(x._0) + ("-" + toString(x._1));
  } else {
    return "NoLoc";
  }
}

function translate$2(by, x) {
  if (!x) {
    return by;
  }
  var y = x._1;
  var x$1 = x._0;
  if (by) {
    return {
            _0: translate(x$1, by._0),
            _1: translate(y, by._1),
            [Symbol.for("name")]: "Loc"
          };
  } else {
    return {
            _0: x$1,
            _1: y,
            [Symbol.for("name")]: "Loc"
          };
  }
}

function translateBy$2(startY, startX, endY, endX, x) {
  if (x) {
    return {
            _0: translateBy(startY, startX, x._0),
            _1: translateBy(endY, endX, x._1),
            [Symbol.for("name")]: "Loc"
          };
  } else {
    return {
            _0: {
              _0: "",
              _1: startY,
              _2: startX,
              [Symbol.for("name")]: "Pos"
            },
            _1: {
              _0: "",
              _1: endY,
              _2: endX,
              [Symbol.for("name")]: "Pos"
            },
            [Symbol.for("name")]: "Loc"
          };
  }
}

var decode$2 = Util$Guacamole.Decode.sum(function (x) {
      switch (x) {
        case "Loc" :
            return {
                    TAG: 0,
                    _0: (function (param) {
                        return Json_decode.map((function (param) {
                                      return {
                                              _0: param[0],
                                              _1: param[1],
                                              [Symbol.for("name")]: "Loc"
                                            };
                                    }), (function (param) {
                                      return Json_decode.pair(decode, decode, param);
                                    }), param);
                      }),
                    [Symbol.for("name")]: "Contents"
                  };
        case "NoLoc" :
            return {
                    TAG: 1,
                    _0: (function (param) {
                        return /* NoLoc */0;
                      }),
                    [Symbol.for("name")]: "TagOnly"
                  };
        default:
          throw {
                RE_EXN_ID: Json_decode.DecodeError,
                _1: "[Loc] Unknown constructor: " + x,
                Error: new Error()
              };
      }
    });

function encode$2(x) {
  if (x) {
    return Json_encode.object_({
                hd: [
                  "tag",
                  "Loc"
                ],
                tl: {
                  hd: [
                    "contents",
                    Json_encode.pair(encode, encode, [
                          x._0,
                          x._1
                        ])
                  ],
                  tl: /* [] */0
                }
              });
  } else {
    return Json_encode.object_({
                hd: [
                  "tag",
                  "NoLoc"
                ],
                tl: /* [] */0
              });
  }
}

var Loc = {
  toRange: toRange$1,
  toString: toString$2,
  translate: translate$2,
  translateBy: translateBy$2,
  decode: decode$2,
  encode: encode$2
};

exports.Pos = Pos;
exports.$$Range = $$Range;
exports.Loc = Loc;
/* decode Not a pure module */
