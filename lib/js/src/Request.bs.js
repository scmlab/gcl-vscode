// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Json_encode = require("@glennsl/bs-json/lib/js/src/Json_encode.bs.js");

function encode(x) {
  if (typeof x === "number") {
    if (x === /* ExportProofObligations */0) {
      return Json_encode.object_({
                  hd: [
                    "tag",
                    "ReqExportProofObligations"
                  ],
                  tl: /* [] */0
                });
    } else {
      return Json_encode.object_({
                  hd: [
                    "tag",
                    "ReqDebug"
                  ],
                  tl: /* [] */0
                });
    }
  } else if (x.TAG === /* Inspect */0) {
    return Json_encode.object_({
                hd: [
                  "tag",
                  "ReqInspect"
                ],
                tl: {
                  hd: [
                    "contents",
                    Json_encode.tuple2((function (prim) {
                            return prim;
                          }), (function (prim) {
                            return prim;
                          }), [
                          x._0,
                          x._1
                        ])
                  ],
                  tl: /* [] */0
                }
              });
  } else {
    return Json_encode.object_({
                hd: [
                  "tag",
                  "ReqRefine"
                ],
                tl: {
                  hd: [
                    "contents",
                    Json_encode.tuple2((function (prim) {
                            return prim;
                          }), (function (prim) {
                            return prim;
                          }), [
                          x._0,
                          x._1
                        ])
                  ],
                  tl: /* [] */0
                }
              });
  }
}

var Kind = {
  encode: encode
};

function encode$1(x) {
  return Json_encode.pair((function (prim) {
                return prim;
              }), encode, [
              x._0,
              x._1
            ]);
}

exports.Kind = Kind;
exports.encode = encode$1;
/* No side effect */
