// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var VSCode = require("bs-vscode/lib/js/src/VSCode.bs.js");
var Vscode = require("vscode");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var VscodeLanguageclient = require("vscode-languageclient");

var make = (function (documentSelector, synchronize) {
      return {
		    documentSelector: documentSelector,
		    synchronize: synchronize
      }
    });

var LanguageClientOptions = {
  make: make
};

var makeCommand = (function (command) {
      return { command: command }
    });

var ServerOptions = {
  makeCommand: makeCommand
};

var LanguageClient = { };

var clientHandle = {
  contents: undefined
};

function activate(context) {
  var serverOptions = makeCommand("gcl");
  var documentSelector = [VSCode.DocumentFilterOrString.documentFilter({
          language: "plaintext",
          pattern: undefined,
          scheme: "file"
        })];
  var synchronize = Vscode.workspace.createFileSystemWatcher('**/.clientrc', false, false, false);
  var clientOptions = make(documentSelector, synchronize);
  var client = new VscodeLanguageclient.LanguageClient("languageServerExample", "Language Server Example", serverOptions, clientOptions);
  clientHandle.contents = Caml_option.some(client);
  $$Promise.get(client.onReady(), (function (param) {
          return $$Promise.get(client.sendRequest("guacamole/load", 3), (function (result) {
                        console.log(result);
                        
                      }));
        }));
  client.start();
  
}

var deactivate = Belt_Option.forEach(clientHandle.contents, (function (prim) {
        prim.stop();
        
      }));

exports.LanguageClientOptions = LanguageClientOptions;
exports.ServerOptions = ServerOptions;
exports.LanguageClient = LanguageClient;
exports.clientHandle = clientHandle;
exports.activate = activate;
exports.deactivate = deactivate;
/* deactivate Not a pure module */
